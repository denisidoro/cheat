# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check
          
  binary:
    name: Publish binary for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: 
          - x86_64-osx
          - x86_64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - armv7-linux-androideabi
          - aarch64-linux-android
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
          - x86_64-pc-solaris
          - aarch64-linux-android
          - aarch64-apple-ios
          - x86_64-unknown-freebsd
        include:
          - os: macos-latest
            target: x86_64-osx
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            target: armv7-linux-androideabi
          - os: ubuntu-latest
            target: aarch64-linux-android
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target:  x86_64-pc-solaris
          - os: ubuntu-latest
            target: aarch64-linux-android
          - os: macos-latest
            target: aarch64-apple-ios
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
    steps:
    - uses: hecrj/setup-rust-action@v1.3.4
      with:
        rust-version: stable
    - uses: actions/checkout@v1
    - name: Build
      run: scripts/action release ${{ matrix.target }}

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test

      - name: Install fzf
        run: git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf; yes | ~/.fzf/install;

      - name: Install tmux
        run: sudo apt-get install tmux || sudo apt install tmux || brew install tmux

      - name: Install tealdeer
        run: sudo npm install -g tldr

      - name: Run bash tests
        run: ./tests/run

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: -- -D warnings
